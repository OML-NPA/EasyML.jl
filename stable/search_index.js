var documenterSearchIndex = {"docs":
[{"location":"functions.html#Setting-up","page":"Functions","title":"Setting up","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"modify(global_options::EasyML.GlobalOptions)","category":"page"},{"location":"functions.html#EasyML.modify-Tuple{EasyML.GlobalOptions}","page":"Functions","title":"EasyML.modify","text":"modify(global_options::EasyML.GlobalOptions)\n\nAllows to modify global_options in a GUI.\n\n\n\n\n\n","category":"method"},{"location":"functions.html","page":"Functions","title":"Functions","text":"load_options","category":"page"},{"location":"functions.html#EasyML.load_options","page":"Functions","title":"EasyML.load_options","text":"load_options()\n\nLoads options from your previous run which are located in options.bson.  Uses present working directory. It is run automatically after using EasyML.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"save_model","category":"page"},{"location":"functions.html#EasyML.save_model","page":"Functions","title":"EasyML.save_model","text":"save_model(url::String)\n\nSaves a model to a specified URL. The URL can be absolute or relative.  Use '.model' extension.\n\n\n\n\n\nsave_model()\n\nOpens a file dialog where you can select where to save a model and how it should be called.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"load_model","category":"page"},{"location":"functions.html#EasyML.load_model","page":"Functions","title":"EasyML.load_model","text":"load_model(url::String)\n\nLoads a model from a specified URL. The URL can be absolute or relative.\n\n\n\n\n\nload_model()\n\nOpens a file dialog where you can select a model to be loaded and loads it.\n\n\n\n\n\n","category":"function"},{"location":"functions.html#Design","page":"Functions","title":"Design","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"modify_classes()","category":"page"},{"location":"functions.html#EasyML.modify_classes-Tuple{}","page":"Functions","title":"EasyML.modify_classes","text":"modify_classes()\n\nOpens a GUI for addition or modification of classes.\n\n\n\n\n\n","category":"method"},{"location":"functions.html","page":"Functions","title":"Functions","text":"modify_output()","category":"page"},{"location":"functions.html#EasyML.modify_output-Tuple{}","page":"Functions","title":"EasyML.modify_output","text":"modify_output()\n\nOpens a GUI for addition or modification of output options for classes.\n\n\n\n\n\n","category":"method"},{"location":"functions.html","page":"Functions","title":"Functions","text":"design_model()","category":"page"},{"location":"functions.html#EasyML.design_model-Tuple{}","page":"Functions","title":"EasyML.design_model","text":"design_model()\n\nOpens a GUI for creation of a model.\n\n\n\n\n\n","category":"method"},{"location":"functions.html#Training","page":"Functions","title":"Training","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"modify(training_options::EasyML.TrainingOptions)","category":"page"},{"location":"functions.html#EasyML.modify-Tuple{EasyML.TrainingOptions}","page":"Functions","title":"EasyML.modify","text":"modify(training_options::TrainingOptions)\n\nAllows to modify training_options in a GUI.\n\n\n\n\n\n","category":"method"},{"location":"functions.html","page":"Functions","title":"Functions","text":"get_urls_training","category":"page"},{"location":"functions.html#EasyML.get_urls_training","page":"Functions","title":"EasyML.get_urls_training","text":"get_urls_training(url_inputs::String,url_labels::String)\n\nGets URLs to all files present in both folders (or a folder and a file)  specified by url_inputs and url_labels for training. URLs are automatically saved to EasyML.training_data.\n\n\n\n\n\nget_urls_training(url_inputs::String)\n\nUsed for classification. Gets URLs to all files present in folders located at a folder specified by url_inputs  for training. Folders should have names identical to the name of classes. URLs are automatically saved to EasyML.training_data.\n\n\n\n\n\nget_urls_training()\n\nOpens a folder/file dialog or dialogs to choose folders or folder and a file containing inputs  and labels. URLs are automatically saved to EasyML.training_data.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"get_urls_testing","category":"page"},{"location":"functions.html#EasyML.get_urls_testing","page":"Functions","title":"EasyML.get_urls_testing","text":"get_urls_testing(url_inputs::String,url_labels::String)\n\nGets URLs to all files present in both folders (or a folder and a file)  specified by url_inputs and url_labels for testing. URLs are automatically saved to EasyML.testing_data.\n\n\n\n\n\nget_urls_testing(url_inputs::String)\n\nUsed for classification. Gets URLs to all files present in folders located at a folder specified by url_inputs  for testing. Folders should have names identical to the name of classes. URLs are automatically saved to EasyML.testing_data.\n\n\n\n\n\nget_urls_testing()\n\nIf testing data preparation in modify(training_options) is set to auto, then a percentage  of training data also specified there is reserved for testing. If testing data  preparation is set to manual, then it opens a folder/file dialog or dialogs to choose folders or folder and a file containing inputs  and labels. URLs are automatically saved to EasyML.testing_data.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"prepare_training_data","category":"page"},{"location":"functions.html#EasyML.prepare_training_data","page":"Functions","title":"EasyML.prepare_training_data","text":"prepare_training_data()\n\nPrepares images and corresponding labels for training using URLs loaded previously using  get_urls_training. Saves data to EasyML.training_data.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"prepare_testing_data","category":"page"},{"location":"functions.html#EasyML.prepare_testing_data","page":"Functions","title":"EasyML.prepare_testing_data","text":"prepare_testing_data()\n\nPrepares images and corresponding labels for testing using URLs loaded previously using  get_urls_testing. Saves data to EasyML.testing_data.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"train","category":"page"},{"location":"functions.html#EasyML.train","page":"Functions","title":"EasyML.train","text":"train()\n\nOpens a GUI where training progress can be observed. Training parameters  such as a number of epochs, learning rate and a number of tests per epoch  can be changed during training.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"remove_training_data","category":"page"},{"location":"functions.html#EasyML.remove_training_data","page":"Functions","title":"EasyML.remove_training_data","text":"remove_training_data()\n\nRemoves all training data except for result.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"remove_testing_data","category":"page"},{"location":"functions.html#EasyML.remove_testing_data","page":"Functions","title":"EasyML.remove_testing_data","text":"remove_testing_data()\n\nRemoves all testing data.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"remove_training_results","category":"page"},{"location":"functions.html#EasyML.remove_training_results","page":"Functions","title":"EasyML.remove_training_results","text":"remove_training_results()\n\nRemoves training results.\n\n\n\n\n\n","category":"function"},{"location":"functions.html#Validation","page":"Functions","title":"Validation","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"get_urls_validation","category":"page"},{"location":"functions.html#EasyML.get_urls_validation","page":"Functions","title":"EasyML.get_urls_validation","text":"get_urls_validation(url_inputs::String,url_labels::String)\n\nGets URLs to all files present in both folders (or a folder and a file)  specified by url_inputs and url_labels for validation. URLs are automatically  saved to EasyML.validation_data.\n\n\n\n\n\nget_urls_validation(url_inputs::String)\n\nGets URLs to all files present in a folders specified by url_inputs  for validation. URLs are automatically saved to EasyML.validation_data.\n\n\n\n\n\nget_urls_validation()\n\nOpens a folder/file dialog or dialogs to choose folders or folder and a file containing inputs  and labels. Folder/file dialog for labels can be skipped if there are no labels available.  URLs are automatically saved to EasyML.validation_data.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"validate","category":"page"},{"location":"functions.html#EasyML.validate","page":"Functions","title":"EasyML.validate","text":"validate()\n\nOpens a GUI where validation progress and results can be observed.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"remove_validation_data","category":"page"},{"location":"functions.html#EasyML.remove_validation_data","page":"Functions","title":"EasyML.remove_validation_data","text":"remove_validation_data()\n\nRemoves all validation data except for result.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"remove_validation_results","category":"page"},{"location":"functions.html#EasyML.remove_validation_results","page":"Functions","title":"EasyML.remove_validation_results","text":"remove_validation_results()\n\nRemoves validation results.\n\n\n\n\n\n","category":"function"},{"location":"functions.html#Application","page":"Functions","title":"Application","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"modify(application_options::EasyML.ApplicationOptions)","category":"page"},{"location":"functions.html#EasyML.modify-Tuple{EasyML.ApplicationOptions}","page":"Functions","title":"EasyML.modify","text":"modify(application_options::EasyML.ApplicationOptions)\n\nAllows to modify application_options in a GUI.\n\n\n\n\n\n","category":"method"},{"location":"functions.html","page":"Functions","title":"Functions","text":"get_urls_application","category":"page"},{"location":"functions.html#EasyML.get_urls_application","page":"Functions","title":"EasyML.get_urls_application","text":"get_urls_application(url_inputs::String)\n\nGets URLs to all files present in a folders specified by url_inputs  for application. URLs are automatically saved to EasyML.application_data.\n\n\n\n\n\nget_urls_application()\n\nOpens a folder dialog to choose a folder containing files to which a model should be applied.  URLs are automatically saved to EasyML.application_data.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"apply","category":"page"},{"location":"functions.html#EasyML.apply","page":"Functions","title":"EasyML.apply","text":"apply()\n\nStarts application of a model.\n\n\n\n\n\n","category":"function"},{"location":"functions.html","page":"Functions","title":"Functions","text":"remove_application_data","category":"page"},{"location":"functions.html#EasyML.remove_application_data","page":"Functions","title":"EasyML.remove_application_data","text":"remove_application_data()\n\nRemoves all application data.\n\n\n\n\n\n","category":"function"},{"location":"gui_guide.html#Model-design","page":"GUI guide","title":"Model design","text":"","category":"section"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"(Image: )","category":"page"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"<style>\r\n.column1 {\r\n  float: left;\r\n}\r\n\r\n.column2 {\r\n    padding: 0.40em 0em 0em 2.8em;\r\n}\r\n\r\n.filler {\r\n  float: left;\r\n  width: 100%;\r\n  height: 100px\r\n  margin-bottom: 10em;\r\n}\r\n\r\nrow::after{\r\n   content: \"\";\r\n  clear: both;\r\n  display: table;\r\n}\r\n\r\n</style>\r\n<div class=\"row\">\r\n    <div class=\"column1\">\r\n        <div>\r\n            <img   src=\"./assets/images/icons/saveIcon.png\" width = 34em>\r\n        </div>\r\n        <div>\r\n            <img   src=\"./assets/images/icons/optionsIcon.png\" width = 34em>\r\n        </div>\r\n        <div>\r\n            <img   src=\"./assets/images/icons/arrangeIcon.png\" width = 34em>\r\n        </div>\r\n    </div class=\"column1\">\r\n  <div class=\"column2\">\r\n    <p>- saves your model</p>\r\n    <p>- opens options for changing visual aspects</p>\r\n    <p>- arranges layers according to made connections</p>\r\n  </div class=\"column2\">\r\n</div class=\"row\">\r\n<div class=\"filler\"></div class=\"filler\">","category":"page"},{"location":"gui_guide.html#Adding-classes","page":"GUI guide","title":"Adding classes","text":"","category":"section"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"<img   src=\"./assets/images/modify_classes.png\" width = 450em>","category":"page"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"<style> \r\n.definition{\r\n  color: rgb(231,76, 60);\r\n  font-weight: bold;\r\n}\r\n\r\n</style>\r\n<p><par class=\"definition\">Name</par> - name of a class. It is just for your convenience.</p>\r\n\r\n<p><par class=\"definition\">Weight</par> - used for weight accuracy during training and validation. \r\nCalculated automatically during data preparation based on the frequency of classes. Can be also specified manually.</p>\r\n\r\n<p><par class=\"definition\">Parent</par> - adds a class to the specified parent.</p>\r\n\r\n<p><par class=\"definition\">Parent 2</par> - appears if the first parent is specified. Adds a class to the specified parent.</p>\r\n\r\n<p><par class=\"definition\">Color (RGB)</par> - RGB color of a class, which should correspond to its color on your images. Uses 0-255 range.</p>\r\n\r\n<p><par class=\"definition\">Overlap of classes</par> - specifies that a class is an overlap of two classes and should be just added to specified parents.</p>\r\n\r\n<p><par class=\"definition\">Border is important</par> - makes a separate class during training which detects borders of the current class.</p>\r\n\r\n<p><par class=\"definition\">Border thickness</par> - specifies thickness of a border that should be detected.</p>\r\n\r\n<p><par class=\"definition\">Ignore object with a broken border</par> - removes objects that do not have a closed border during application of a model.</p>\r\n\r\n<p><par class=\"definition\">Minimum object area</par> - removes objects that have area smaller than specified.</p>","category":"page"},{"location":"gui_guide.html#Output-options","page":"GUI guide","title":"Output options","text":"","category":"section"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"<img   src=\"./assets/images/modify_output1.png\" width = 600em>\r\n\r\n<p><par class=\"definition\">Output mask</par> - exports a mask after applying all processing except for border data.</p>\r\n\r\n<p><par class=\"definition\">Border mask</par> - exports a mask with class borders if a class has border detection enabled.</p>\r\n\r\n<p><par class=\"definition\">Applied border mask</par> - exports a mask also processed using border data.</p>\r\n","category":"page"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"<img   src=\"./assets/images/modify_output2.png\" width = 640em>\r\n\r\n<p><par class=\"definition\">Area distribution</par> - exports area distribution of detected objects as a histogram.</p>\r\n\r\n<p><par class=\"definition\">Area of objects</par> - exports area of each detected object.</p>\r\n\r\n<p><par class=\"definition\">Sum of areas of objects</par> - exports sum of all areas for each class.</p>\r\n\r\n<p><par class=\"definition\">Binning method</par> - specifies a binning method: automatic, number of bins or bin width.</p>\r\n\r\n<p><par class=\"definition\">Value</par> - number of bins or bin width depending on previous settings.</p>\r\n\r\n<p><par class=\"definition\">Normalisation</par> - normalisation type for a histogram: pdf, density, probability or none.</p>","category":"page"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"<img   src=\"./assets/images/modify_output3.png\" width = 640em>","category":"page"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"All is the same as for area.","category":"page"},{"location":"gui_guide.html#Global-options","page":"GUI guide","title":"Global options","text":"","category":"section"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"<img   src=\"./assets/images/global_options1.png\" width = 520em>\r\n\r\n<p><par class=\"definition\">GUI scaling</par> - scales GUI by a given factor.</p>","category":"page"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"<img   src=\"./assets/images/global_options2.png\" width = 520em>\r\n\r\n<p><par class=\"definition\">Allow GPU</par> - allows to use a GPU if a compatible one is installed.</p>\r\n\r\n<p><par class=\"definition\">Number of threads</par> - a number of CPU threads that will be used.</p>\r\n\r\n<p><par class=\"definition\">Number of slices</par> - allows to process images during validation and application that otherwise cause an out of memory error by slicing them into multiple parts. Used only for segmentation.</p>\r\n\r\n<p><par class=\"definition\">Offset</par> - offsets each slice by a given number of pixels to allow for an absence of a seam. </p>","category":"page"},{"location":"gui_guide.html#Training-options","page":"GUI guide","title":"Training options","text":"","category":"section"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"<img   src=\"./assets/images/training_options1.png\" width = 520em>\r\n\r\n<p><par class=\"definition\">Weight accuracy</par> - uses weight accuracy where applicable.</p>\r\n\r\n<p><par class=\"definition\">Mode</par> - either Auto or Manual. Manual allows to specify weights manually for each class.</p>","category":"page"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"<img   src=\"./assets/images/training_options2.png\" width = 520em>\r\n\r\n<p><par class=\"definition\">Data preparation mode</par> - either Auto or Manual. Auto takes a specified fraction of training data to be used for testing. Manual allows to use other data as testing data.</p>\r\n\r\n<p><par class=\"definition\">Test data fraction</par> - a fraction of data from training data to be used for testing if data preparation mode is Auto.</p>\r\n\r\n<p><par class=\"definition\">Number of test</par> - a number of tests to be done each epoch at equal intervals.</p>","category":"page"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"<img   src=\"./assets/images/training_options3.png\" width = 520em>\r\n\r\n<p><par class=\"definition\">Convert to grayscale</par> - converts images to grayscale for training, validation and application.</p>\r\n\r\n<p><par class=\"definition\">Mirroring</par> - augments data by producing horizontally mirrored images.</p>\r\n\r\n<p><par class=\"definition\">Rotation</par> -  augments data by rotating images using a specified number of angles. 1 means no rotation, only an angle of 0.</p>\r\n\r\n<p><par class=\"definition\">Minimum fraction of labeled pixels</par> -  if supplied images are bigger than a model's input size, then an image is broken into chunks with a correct size. This option specifies the minimum number of labeled pixels for these chunks to be kept.</p>\r\n","category":"page"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"<img   src=\"./assets/images/training_options4.png\" width = 520em>\r\n\r\n<p><par class=\"definition\">Optimiser</par> - an optimiser that should be used during training. ADAM usually works well for all cases.</p>\r\n\r\n<p>Next are parameters specific for each optimiser.</p>\r\n\r\n<p><par class=\"definition\">Learning rate</par> - specifies how fast a model should train. Lower values - more stable, but slower. Higher values - less stable, but faster. Should be decreased as training progresses.</p>\r\n\r\n<p><par class=\"definition\">Batch size</par> - a number of images that should be batched together during training.</p>\r\n\r\n<p><par class=\"definition\">Number of epochs</par> - a number of rounds for which a model should be trained.</p>","category":"page"},{"location":"gui_guide.html#Application-options","page":"GUI guide","title":"Application options","text":"","category":"section"},{"location":"gui_guide.html","page":"GUI guide","title":"GUI guide","text":"<img   src=\"./assets/images/application_options.png\" width = 520em>\r\n\r\n<p><par class=\"definition\">Save path</par> - a folder where output data should be saved.</p>\r\n\r\n<p><par class=\"definition\">Analyse by</par> - either file or folder. Used for segmentation. Analysis by file treats every image independently. Analysis by folder combines data for images in the same folder.</p>\r\n\r\n<p><par class=\"definition\">Output data type</par> - a format in which data should be saved.</p>\r\n\r\n<p><par class=\"definition\">Output image type</par>Output image type - a format in which images should be saved.</p>\r\n\r\n<p><par class=\"definition\">Scaling</par> - used for segmentation. Converts pixels to a unit of measurement of your choice.</p>","category":"page"},{"location":"quick_guide.html","page":"Quick guide","title":"Quick guide","text":"EasyML is easy enough to figure out by yourself! Just run the following lines. ","category":"page"},{"location":"quick_guide.html#Adding-the-package","page":"Quick guide","title":"Adding the package","text":"","category":"section"},{"location":"quick_guide.html","page":"Quick guide","title":"Quick guide","text":"using EasyML","category":"page"},{"location":"quick_guide.html#Setting-up","page":"Quick guide","title":"Setting up","text":"","category":"section"},{"location":"quick_guide.html","page":"Quick guide","title":"Quick guide","text":"modify(global_options)","category":"page"},{"location":"quick_guide.html#Design","page":"Quick guide","title":"Design","text":"","category":"section"},{"location":"quick_guide.html","page":"Quick guide","title":"Quick guide","text":"modify_classes()\r\nmodify_output()\r\ndesign_model()","category":"page"},{"location":"quick_guide.html#Train","page":"Quick guide","title":"Train","text":"","category":"section"},{"location":"quick_guide.html","page":"Quick guide","title":"Quick guide","text":"modify(training_options)\r\nget_urls_training()\r\nget_urls_testing()\r\nprepare_training_data()\r\nprepare_testing_data()\r\nresults = train()\r\nremove_training_data()\r\nremove_testing_data()\r\nremove_training_results()","category":"page"},{"location":"quick_guide.html#Validate","page":"Quick guide","title":"Validate","text":"","category":"section"},{"location":"quick_guide.html","page":"Quick guide","title":"Quick guide","text":"get_urls_validation()\r\nresults = validate()\r\nremove_validation_data()\r\nremove_validation_results()","category":"page"},{"location":"quick_guide.html#Apply","page":"Quick guide","title":"Apply","text":"","category":"section"},{"location":"quick_guide.html","page":"Quick guide","title":"Quick guide","text":"modify(application_options)\r\nget_urls_application()\r\napply()\r\nremove_application_data()","category":"page"},{"location":"quick_guide.html#On-reopening","page":"Quick guide","title":"On reopening","text":"","category":"section"},{"location":"quick_guide.html","page":"Quick guide","title":"Quick guide","text":"load_model()\r\nload_options()","category":"page"},{"location":"handling_issues.html","page":"Handling issues","title":"Handling issues","text":"If you encounter any issues with training, validation or application, then check first  corresponding ","category":"page"},{"location":"handling_issues.html","page":"Handling issues","title":"Handling issues","text":"EasyML.training_data.tasks, ","category":"page"},{"location":"handling_issues.html","page":"Handling issues","title":"Handling issues","text":"EasyML.validation_data.tasks and ","category":"page"},{"location":"handling_issues.html","page":"Handling issues","title":"Handling issues","text":"EasyML.application_data.tasks. ","category":"page"},{"location":"handling_issues.html","page":"Handling issues","title":"Handling issues","text":"Failed tasks and their errors will be there.","category":"page"},{"location":"advanced.html#Model-data","page":"Advanced","title":"Model data","text":"","category":"section"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"A struct named model_data is exported and holds all information about your model.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"mutable struct ModelData\r\n    model::Chain                                       # Flux.jl model.\r\n    layers_info::Vector{AbstractLayerInfo}             # contains information for visualisation of layers.\r\n    loss::Function                                     # holds loss that is used during training and validation.\r\n    input_size::NTuple{3,Int64}                        # model input size.\r\n    output_size::Union{Tuple{Int64},NTuple{3,Int64}}   # model output size.\r\n    classes::Vector{<:AbstractClass}                   # hold information about classes that a neural network outputs and what should be done with them.\r\n    OutputOptions::Vector{<:AbstractOutputOptions}     # hold information about output options for each class for application of the model.\r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"loss, classes and OutputOptions fields can be modified manually if needed.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"loss can be any function.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"classes can be of different types depending on a type of a problem.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"mutable struct ImageClassificationClass<:AbstractClass\r\n    name::String                # name of a class.\r\n    weight::Float32             # weight of a class used for weighted accuracy calculation.\r\nend\r\n\r\nmutable struct ImageRegressionClass<:AbstractClass\r\n    name::String                # name of a class.\r\nend\r\n\r\nmutable struct ImageSegmentationClass<:AbstractClass\r\n    name::String               # name of a class. It is just for your convenience.\r\n    weight::Float32            # weight of a class used for weighted accuracy calculation.\r\n    color::Vector{Float64}     # RGB color of a class, which should correspond to its color on your images. Uses 0-255 range.\r\n    border::Bool               # allows to train a neural network to recognize borders and, therefore, better separate objects during post-processing.\r\n    border_thickness::Int64    # border thickness in pixels.\r\n    border_remove_objs::Bool   # removes objects that do not have closed borders.\r\n    min_area::Int64            # minimum area of an object.\r\n    parents::Vector{String}    # up to two parents can be specified by their name. Objects from a child are added to its parent.\r\n    not_class::Bool            # specifies that a class is an overlap of two classes and should be just added to specified parents.\r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"OutputOptions should also be chosen accordingly to a type of a problem one has.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"ImageClassificationOutputOptions and ImageRegressionOutputOptions are currently empty. New functionality can be added on request.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"mutable struct ImageSegmentationOutputOptions<:AbstractOutputOptions\r\n    Mask::OutputMask            # holds output mask options.\r\n    Area::OutputArea            # holds area of objects options.\r\n    Volume::OutputVolume        # holds volume of objects options.\r\nend\r\n\r\nmutable struct OutputMask\r\n    mask::Bool                  # exports a mask after applying all processing except for border data.\r\n    mask_border::Bool           # exports a mask with class borders if a class has border detection enabled.\r\n    mask_applied_border::Bool   # exports a mask processed using border data.\r\nend\r\n\r\nmutable struct OutputArea\r\n    area_distribution::Bool     # exports area distribution of detected objects as a histogram.\r\n    obj_area::Bool              # exports area of each detected object.\r\n    obj_area_sum::Bool          # exports sum of all areas for each class.\r\n    binning::Int64              # specifies a binning method; 0 - automatic, 1 - number of bins, 2 - bin width.\r\n    value::Float64              # number of bins or bin width depending on a previous settings.\r\n    normalisation::Int64        # normalisation type for a histogram, 0 - pdf, 1 - Density, 2 - Probability, 3 - None.\r\nend\r\n\r\nmutable struct OutputVolume\r\n    volume_distribution::Bool   # exports volume distribution of detected objects as a histogram.\r\n    obj_volume::Bool            # exports volume of each detected object.\r\n    obj_volume_sum::Bool        # exports sum of all volumes for each class.\r\n    binning::Int64              # specifies a binning method; 0 - automatic, 1 - number of bins, 2 - bin width.\r\n    value::Float64              # number of bins or bin width depending on a previous settings.\r\n    normalisation::Int64        # normalisation type for a histogram, 0 - pdf, 1 - Density, 2 - Probability, 3 - None.\r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"Example code for a segmentation problem.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"class1 = ImageSegmentationClass(name = \"Cell\", weight = 1, color = [0,255,0], border = true, \r\n    border_thickness = 5, border_remove_objs = true, min_area = 50)\r\nclass2 = ImageSegmentationClass(name = \"Vacuole\", weight = 1, color = [255,0,0], border = false, \r\n    border_thickness = 5, border_remove_objs = true, min_area = 5, parents = [\"Cell\",\"\"])\r\n\r\nclass_output_options1 = ImageSegmentationOutputOptions()\r\nclass_output_options2 = ImageSegmentationOutputOptions()\r\n\r\nsettings.problem_type = :Segmentation\r\nclasses = [class1,class2]\r\noutput_options = [class_output_options1,class_output_options2]\r\nmodel_data.classes = classes\r\nmodel_data.OutputOptions = output_options","category":"page"},{"location":"advanced.html#Options","page":"Advanced","title":"Options","text":"","category":"section"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"All options are located in EasyML.options.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"mutable struct Options\r\n    GlobalOptions::GlobalOptions\r\n    DesignOptions::DesignOptions\r\n    TrainingOptions::TrainingOptions\r\n    ApplicationOptions::ApplicationOptions\r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"mutable struct GlobalOptions\r\n    Graphics::Graphics\r\n    HardwareResources::HardwareResources\r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"Can be accessed as EasyML.global_options.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"mutable struct HardwareResources\r\n    allow_GPU::Bool      # allows to use a GPU if a compatible one is installed.\r\n    num_threads::Int64   # a number of CPU threads that will be used.\r\n    num_slices::Int64    # allows to process images during validation and application that otherwise cause an out of memory error by slicing them into multiple parts. Used only for segmentation.\r\n    offset::Int64        # offsets each slice by a given number of pixels to allow for an absence of a seam. \r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"Can be accessed as EasyML.hardware_resources.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"mutable struct Graphics\r\n    scaling_factor::Float64   # scales GUI by a given factor.\r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"Can be accessed as EasyML.graphics.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"mutable struct DesignOptions\r\n    width::Float64        # width of layers\r\n    height::Float64       # height of layers\r\n    min_dist_x::Float64   # minimum horizontal distance between layers\r\n    min_dist_y::Float64   # minimum vertical distance between layers\r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"Can be accessed as EasyML.design_options.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"mutable struct TrainingOptions\r\n    Accuracy::AccuracyOptions\r\n    Testing::TestingOptions\r\n    Processing::ProcessingOptions\r\n    Hyperparameters::HyperparametersOptions\r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"Can be accessed as EasyML.training_options.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"mutable struct AccuracyOptions \r\n    weight_accuracy::Bool   # uses weight accuracy where applicable.\r\n    accuracy_mode::Symbol   # either :Auto or :Manual. :Manual allows to specify weights manually for each class.\r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"Can be accessed as EasyML.accuracy_options.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"mutable struct TestingOptions\r\n    test_data_fraction::Float64     # a fraction of data from training data to be used for testing if data preparation mode is set to :Auto.\r\n    num_tests::Float64              # a number of tests to be done each epoch at equal intervals.\r\n    data_preparation_mode::Symbol   # Either :Auto or :Manual. Auto takes a specified fraction of training data to be used for testing. Manual allows to use other data as testing data.\r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"Can be accessed as EasyML.testing_options.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"mutable struct ProcessingOptions\r\n    grayscale::Bool       # converts images to grayscale for training, validation and application.\r\n    mirroring::Bool       # augments data by producing horizontally mirrored images.\r\n    num_angles::Int64     # augments data by rotating images using a specified number of angles. 1 means no rotation, only an angle of 0.\r\n    min_fr_pix::Float64   # if supplied images are bigger than a model's input size, then an image is broken into chunks with a correct size. This option specifies the minimum number of labeled pixels for these chunks to be kept.\r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"Can be accessed as EasyML.processing_options.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"mutable struct HyperparametersOptions\r\n    optimiser::Symbol                   # an optimiser that should be used during training. ADAM usually works well for all cases.\r\n    optimiser_params::Vector{Float64}   # parameters specific for each optimiser. Default ones can be found in EasyML.training_options_data\r\n    learning_rate::Float64              # pecifies how fast a model should train. Lower values - more stable, but slower. Higher values - less stable, but faster. Should be decreased as training progresses.\r\n    epochs::Int64                       # a number of rounds for which a model should be trained.\r\n    batch_size::Int64                   # a number of data that should be batched together during training.\r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"Can be accessed as EasyML.hyperparameters_options.","category":"page"},{"location":"advanced.html#A-custom-loop","page":"Advanced","title":"A custom loop","text":"","category":"section"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"A custom loop can be written using forward.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"Example code for a segmentation problem.","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"model = model_data.model\r\ndata = [ones(Float32,160,160,3,1)]   # vector with your data goes here\r\nresults = Vector{BitArray{3}}(undef,0)\r\nfor i = 1:length(data)\r\n    output_raw = forward(model,data[i])\r\n    output_bool = output_raw[:,:,:].>0.5\r\n    output = apply_border_data(output_bool,model_data.classes)   # can be removed if your model does not detect borders\r\n    push!(results,output)\r\nend","category":"page"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"forward","category":"page"},{"location":"advanced.html#EasyML.forward","page":"Advanced","title":"EasyML.forward","text":"forward(model::Chain, input_data::Array{Float32}; num_slices::Int64=1, offset::Int64=20, use_GPU::Bool=false)\n\nThe function takes in a model and input data and returns output from that model. num_slices specifies in how many  slices should an array be run thorugh a neural network. Allows to process images that otherwise cause an out of memory error. offset specifies the size of an overlap that should be taken from the left and right side of each slice to allow for  an absense of a seam. use_GPU enables or disables GPU usage.\n\n\n\n\n\n","category":"function"},{"location":"advanced.html","page":"Advanced","title":"Advanced","text":"apply_border_data","category":"page"},{"location":"advanced.html#EasyML.apply_border_data","page":"Advanced","title":"EasyML.apply_border_data","text":"apply_border_data(input_data::BitArray{3},classes::Vector{ImageSegmentationClass})\n\nUsed for segmentation. Uses borders of objects that a neural network detected in order  to separate objects from each other. Output from a neural network should be fed after  converting to BitArray.\n\n\n\n\n\n","category":"function"},{"location":"index.html#Package-features","page":"Home","title":"Package features","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"This package allows to use machine learning in Julia through a graphical user interface.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"It is possible to:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Design a neural network\nTrain a neural network\nValidate a neural network\nApply a neural network to new data","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Classification, regression and segmentation on images are currently supported.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Flux.jl machine learning library is used under the hood.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"<style>\r\n\r\n.column1 {\r\n  float: left;\r\n  width: 34%;\r\n  padding: 0.25%;\r\n}\r\n\r\n.column2 {\r\n  float: left;\r\n  width: 32.5%;\r\n  padding: 0.25%;\r\n}\r\n\r\n.column3 {\r\n  float: left;\r\n  width: 32.75%;\r\n  padding: 0.25%;\r\n}\r\n\r\n.filler {\r\n  float: left;\r\n  width: 100%;\r\n  margin-bottom: 0.6em;\r\n}\r\n\r\nrow::after{\r\n   content: \"\";\r\n  clear: both;\r\n  display: table;\r\n}\r\n\r\n</style>\r\n<div class=\"row\">\r\n  <div class=\"column1\">\r\n    <img   src=\"./assets/images/design_model.png\">\r\n  </div>\r\n  <div class=\"column2\">\r\n    <img   src=\"./assets/images/train.png\">\r\n  </div>\r\n  <div class=\"column3\">\r\n    <img   src=\"./assets/images/validate1.png\">\r\n  </div>\r\n</div>\r\n<div class=\"filler\">\r\n</div>","category":"page"},{"location":"index.html#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Add the package from the repository to Julia using ","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"] add https://github.com/OML-NPA/EasyML.jl","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"then run","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"using EasyML ","category":"page"}]
}
